# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

# See the example.cfg file for a description of available parameters.

[mcu]
##	Obtain mcu value by "ls -l /dev/serial/by-id/" 
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_36FFD5054255373723861957-if00

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[include fluidd.cfg]

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 16
endstop_pin: PC0 
position_endstop: 120
position_max: 120
homing_speed: 50        # Increase after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: True
run_current: 0.5
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 500


[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 16
endstop_pin: PC1
position_endstop: 120
position_max: 120
homing_speed: 50        # Increase after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: True
run_current: 0.5
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 500


[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
rotation_distance: 8
microsteps: 16
endstop_pin: PC2
position_endstop: -0.10
position_max: 120
position_min: -1.5
homing_speed: 10        # Max 100
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: True
run_current: 0.37
hold_current: 0.35
sense_resistor: 0.110
stealthchop_threshold: 500


[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
full_steps_per_rotation: 200
#New Config Value = Old Config Value * (Actual Extruded Amount/Target Extruded Amount)
#22.23*(93/97)=21.313
rotation_distance: 21.313        # See calibrating rotation_distance on extruders doc
#rotation_distance: 22.23        # Stock value
gear_ratio: 50:10               # For Mini Afterburner
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: NTC 100K beta 3950
#sensor_type: EPCOS 100K B57560G104F # Adjust for your hotend thermistor (see options below)
sensor_pin: PA0
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 200
max_extrude_cross_section: 0.8
pressure_advance: 0.0
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: True
run_current: 0.3
hold_current: 0.2
sense_resistor: 0.110
stealthchop_threshold: 500


[heater_bed]
heater_pin: PC9
sensor_type: NTC 100K MGB18-104F39050L32
#sensor_type: NTC 100K beta 3950 # For Keenovo, verify yours
sensor_pin: PC3
smooth_time: 3.0
min_temp: 0
max_temp: 120

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 2000
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0


[heater_fan hotend_fan]
pin: PC7
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0         # You can't PWM the delta fan unless using blue wire


[fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5
off_below: 0.13
cycle_time: 0.010


[idle_timeout]
timeout: 1800


[safe_z_home]
home_xy_position: 120,120
speed: 50.0
z_hop: 5

[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

[gcode_macro FILTER_CHAMBER]
default_parameter_BED_TEMPERATURE: 48
gcode:
    M117 Cooling down ~fan~
    SET_FAN_SPEED FAN=nevermore SPEED=0.65
    TEMPERATURE_WAIT SENSOR="heater_bed" MAXIMUM={BED_TEMPERATURE}      ; Wait for bed temp to go down
#    SONG_SIMPLE_DONE
    SET_FAN_SPEED FAN=nevermore SPEED=0
    M117

[gcode_macro M600]
default_parameter_X: 20
default_parameter_Y: 20
default_parameter_Z: 40
gcode:
    SAVE_GCODE_STATE NAME=M600                                                  ;Save state
    PAUSE                                                                       ;Pause print
        G91                                                                     ;Relative positioning
    G1 Z20 F900                                                                 ;Raise Z away from print
    G90                                                                         ;Absolute positioning
    G1 X{X} Y{Y} F5000                                                          ;Move to purge bucket
    G1 Z{Z} F5000                                                               ;Move to purge bucket
    UNLOAD_FILAMENT                                                             ;Unload the spool so you can change color
    SONG_SIMPLE_DONE
        RESTORE_GCODE_STATE NAME=M600                                           ;Restore state

[gcode_macro PURGE_NOZZLE]
gcode:
    G91                                                                         ;Relative positioning
    G1 E45.0 F250                                                               ;Extrude 45mm of filament
    G90                                                                         ;Absolute positionin

[gcode_macro DUMP_PARAMETERS]
description: Dump all Klipper parameters to terminal
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh','configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

# For example SPEEDTEST I=10
# Compare the GET_POSITION output before and after, see if you skipped steps. IIRC you want the "mcu" line to show within 16 before and after (a full step)
[gcode_macro SPEEDTEST]
gcode:
  #Parameters
  {% set i = params.I|default(1)|int %}
  
  SAVE_GCODE_STATE NAME=SPEEDTEST
  G28 X Y
  GET_POSITION
  G90                              ; absolute positioning
  {% for iteration in range(i|int) %}
    G1 X0 Y0     F27000
    G1 X290 Y290 F27000
    G1 X0 Y0     F27000
    G1 X290 Y290 F27000

    G1 X0 Y290 F36000

    G1 X290 Y0 F27000
    G1 X0 Y290 F27000
    G1 X290 Y0 F27000
    G1 X0 Y290 F27000

    G1 X0 Y0 F36000
    G1 X290 Y0 F36000
    G1 X290 Y290 F36000
    G1 X0 Y290 F36000
    G1 X0 Y0 F36000
  {% endfor %}
  G28 X Y
  GET_POSITION
  RESTORE_GCODE_STATE NAME=SPEEDTEST

[gcode_arcs]
resolution: 0.05

[respond]
default_type: echo

[pause_resume]
recover_velocity: 50

#########NEEDED IN SLICER FOR TEMPERATURES TO WORK###########################################################################################################################
## START_PRINT BED_TEMPERATURE=[first_layer_bed_temperature] EXTRUDER_TEMPERATURE=[first_layer_temperature] CHAMBER=[chamber_temperature] FILAMENT_TYPE={filament_type[0]} ##
#############################################################################################################################################################################
[gcode_macro START_PRINT]
default_parameter_BED_TEMPERATURE: 60
default_parameter_EXTRUDER_TEMPERATURE: 200
default_parameter_CHAMBER: 42
gcode:
    G28
    G90                                                                         ;Absolute positioning
    G1 X60 Y60 Z20 F12000
    {% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" %}
      SET_FAN_SPEED FAN=nevermore SPEED=0.60
      M106 S255
    {% endif %}
    M117 Heating shit
    M190 S{params.BED_TEMPERATURE}                                                            ; Set bed to final temp and wait
    {% set chamber = printer['temperature_sensor chamber'] %}
    {% if params.BED_TEMPERATURE|int > 70 and chamber.temperature < params.CHAMBER|int %}     ; Heat soak if needed
    M117 Soaking: {CHAMBER}~degrees~
    M109 S150                                                                   ; Set hotend to 150 and wait for temp
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBER}      ; Wait for chamber temp
    M106 S0                                                                     ; Turn on Part Cooling Fan off
    {% endif %}
    G1 X10 Y10 Z10 F15000                                                        ;Move to front left corner and wait for nozzle temperature
    M117 Heating ~extruder~
    M109 S{EXTRUDER_TEMPERATURE}                                                ;Set real nozzle temperature1
    G1 E7 F900
    G92 E0.0
    M117 Printer goes Brr
   
[gcode_macro END_PRINT]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-8.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_shell_command backup_cfg]
command: sh /home/pi/klipper_config/autocommit.sh
timeout: 30.0
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
  RUN_SHELL_COMMAND CMD=backup_cfg

# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "NTC 100K beta 3950" (Keenovo Heater Pad)
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32"
#   "AD595"
#   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 18.859
#*# pid_ki = 1.123
#*# pid_kd = 79.207
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 65.475
#*# pid_ki = 2.568
#*# pid_kd = 417.401
